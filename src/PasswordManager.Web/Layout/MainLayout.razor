@inherits LayoutComponentBase
@inject NavigationManager Nav
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css">

<nav class="bg-white shadow-md">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between h-16">
            <div class="flex items-center space-x-2">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-purple-600" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10 2a4 4 0 00-4 4v4a4 4 0 108 0V6a4 4 0 00-4-4zM2 16a6 6 0 0112 0H2z" clip-rule="evenodd"/>
                </svg>
                <a href="/" class="text-xl font-bold text-gray-900">Gestionnaire de Mots de Passe</a>
            </div>
            
            <div class="flex items-center space-x-4">
                @if (isLoggedIn)
                {
                    <button @onclick="Logout"
                        class="px-4 py-2 text-sm font-medium text-white bg-red-500 rounded-md hover:bg-red-600 focus:outline-none">
                        🚪 Déconnexion
                    </button>
                }
                else
                {
                    <a href="/login"
                        class="px-4 py-2 text-sm font-medium text-purple-600 hover:text-purple-800 focus:outline-none">
                        🔑 Connexion
                    </a>
                    <a href="/register"
                        class="px-4 py-2 text-sm font-medium text-white bg-purple-600 rounded-md hover:bg-purple-700 focus:outline-none">
                        📝 Inscription
                    </a>
                }
            </div>
        </div>
    </div>
</nav>


    <main>
            @Body
    </main>

@code {
    private bool isLoggedIn = false;

    protected override async Task OnInitializedAsync()
    {
        var token = await localStorage.GetItemAsync<string>("authToken");
        isLoggedIn = !string.IsNullOrEmpty(token);
        StateHasChanged(); 
    }

    private async Task Logout()
    {
        await localStorage.RemoveItemAsync("authToken"); 
        isLoggedIn = false;
        Nav.NavigateTo("/login", forceLoad: true); 
    }
}
